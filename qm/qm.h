#ifndef __QM_H__
#define __QM_H__


// /////////////////////////////////////////////////////////////////////////////
//    Macro declarations
// /////////////////////////////////////////////////////////////////////////////

#define _NOT  '!'
#define _XOR  '^'
#define _AND  '*'
#define _OR   '+'


// /////////////////////////////////////////////////////////////////////////////
//    Type declarations
// /////////////////////////////////////////////////////////////////////////////

typedef enum
{
    QM_SUCCESS = 1,
    QM_NOTHING = 0,
    QM_FAIL_TO_POP_OPERAND = -2,
    QM_FAIL_TO_INSERT_TABLE = -3,
    QM_INVALID_OUTPUT_BUFFER = -4,
    QM_INVALID_OPERAND = -5,
    QM_UNKNOWN_ERROR = -6
} tQmStatus;


// /////////////////////////////////////////////////////////////////////////////
//    Variables declarations
// /////////////////////////////////////////////////////////////////////////////


// /////////////////////////////////////////////////////////////////////////////
//    Functions
// /////////////////////////////////////////////////////////////////////////////

/**
 * Quine McClusky minimization.
 * @param [in]   pInput     Input expression.
 * @param [out]  pOutput    Output expression.
 * @param [in]   outputLen  Output buffer length.
 * @param [in]   pLog       Debug log file.
 * @returns  Success(0) or failure(< 0).
 */
int QM(char *pInput, char *pOutput, int outputLen, FILE *pLog);


#endif // __QM_H__
